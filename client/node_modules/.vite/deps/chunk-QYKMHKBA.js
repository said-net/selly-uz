import {
  require_prop_types
} from "./chunk-RXOJMYNJ.js";
import {
  require_react
} from "./chunk-NMNKPSZH.js";
import {
  __commonJS
} from "./chunk-MB5FDF5C.js";

// node_modules/@material-tailwind/react/types/generic.js
var require_generic = __commonJS({
  "node_modules/@material-tailwind/react/types/generic.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: true, get: all[name] });
    }
    _export(exports, { propTypesColors: function() {
      return propTypesColors;
    }, propTypesAnimation: function() {
      return propTypesAnimation;
    }, propTypesDismissType: function() {
      return propTypesDismissType;
    }, propTypesOffsetType: function() {
      return propTypesOffsetType;
    }, propTypesPlacements: function() {
      return propTypesPlacements;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var propTypesColors = ["blue-gray", "gray", "brown", "deep-orange", "orange", "amber", "yellow", "lime", "light-green", "green", "teal", "cyan", "light-blue", "blue", "indigo", "deep-purple", "purple", "pink", "red"];
    var propTypesAnimation = _propTypes.default.shape({ mount: _propTypes.default.instanceOf(Object), unmount: _propTypes.default.instanceOf(Object) });
    var propTypesDismissType = _propTypes.default.shape({ enabled: _propTypes.default.bool, escapeKey: _propTypes.default.bool, referencePress: _propTypes.default.bool, referencePressEvent: _propTypes.default.oneOf(["pointerdown", "mousedown", "click"]), outsidePress: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.func]), outsidePressEvent: _propTypes.default.oneOf(["pointerdown", "mousedown", "click"]), ancestorScroll: _propTypes.default.bool, bubbles: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.shape({ escapeKey: _propTypes.default.bool, outsidePress: _propTypes.default.bool })]) });
    var propTypesOffsetType = _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({ mainAxis: _propTypes.default.number, crossAxis: _propTypes.default.number, alignmentAxis: _propTypes.default.number })]);
    var propTypesPlacements = ["top-start", "top", "top-end", "right-start", "right", "right-end", "bottom-start", "bottom", "bottom-end", "left-start", "left", "left-end"];
  }
});

// node_modules/@material-tailwind/react/types/components/tabs.js
var require_tabs = __commonJS({
  "node_modules/@material-tailwind/react/types/components/tabs.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: true, get: all[name] });
    }
    _export(exports, { propTypesId: function() {
      return propTypesId;
    }, propTypesValue: function() {
      return propTypesValue;
    }, propTypesAnimate: function() {
      return propTypesAnimate;
    }, propTypesDisabled: function() {
      return propTypesDisabled;
    }, propTypesClassName: function() {
      return propTypesClassName;
    }, propTypesOrientation: function() {
      return propTypesOrientation;
    }, propTypesIndicator: function() {
      return propTypesIndicator;
    }, propTypesChildren: function() {
      return propTypesChildren;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _generic = require_generic();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var propTypesId = _propTypes.default.string;
    var propTypesValue = _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]).isRequired;
    var propTypesAnimate = _generic.propTypesAnimation;
    var propTypesDisabled = _propTypes.default.bool;
    var propTypesClassName = _propTypes.default.string;
    var propTypesOrientation = _propTypes.default.oneOf(["horizontal", "vertical"]);
    var propTypesIndicator = _propTypes.default.instanceOf(Object);
    var propTypesChildren = _propTypes.default.node.isRequired;
  }
});

// node_modules/@material-tailwind/react/components/Tabs/TabsContext.js
var require_TabsContext = __commonJS({
  "node_modules/@material-tailwind/react/components/Tabs/TabsContext.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: true, get: all[name] });
    }
    _export(exports, { TabsContext: function() {
      return TabsContext;
    }, useTabs: function() {
      return useTabs;
    }, TabsContextProvider: function() {
      return TabsContextProvider;
    }, setId: function() {
      return setId;
    }, setActive: function() {
      return setActive;
    }, setAnimation: function() {
      return setAnimation;
    }, setIndicator: function() {
      return setIndicator;
    }, setIsInitial: function() {
      return setIsInitial;
    }, setOrientation: function() {
      return setOrientation;
    } });
    var _react = _interopRequireDefault(require_react());
    var _tabs = require_tabs();
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _iterableToArrayLimit(arr, i) {
      var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
      if (_i == null)
        return;
      var _arr = [];
      var _n = true;
      var _d = false;
      var _s, _e;
      try {
        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i)
            break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null)
            _i["return"]();
        } finally {
          if (_d)
            throw _e;
        }
      }
      return _arr;
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys2 = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
          ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
            return Object.getOwnPropertyDescriptor(source, sym).enumerable;
          }));
        }
        ownKeys2.forEach(function(key) {
          _defineProperty(target, key, source[key]);
        });
      }
      return target;
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        }
        keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpreadProps(target, source) {
      source = source != null ? source : {};
      if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
      return target;
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    function reducer(state, action) {
      switch (action.type) {
        case "SET_ID": {
          return _objectSpreadProps(_objectSpread({}, state), { id: action.value });
        }
        case "SET_ACTIVE": {
          return _objectSpreadProps(_objectSpread({}, state), { active: action.value });
        }
        case "SET_ANIMATION": {
          return _objectSpreadProps(_objectSpread({}, state), { appliedAnimation: action.value });
        }
        case "SET_INDICATOR": {
          return _objectSpreadProps(_objectSpread({}, state), { indicatorProps: action.value });
        }
        case "SET_IS_INITIAL": {
          return _objectSpreadProps(_objectSpread({}, state), { isInitial: action.value });
        }
        case "SET_ORIENTATION": {
          return _objectSpreadProps(_objectSpread({}, state), { orientation: action.value });
        }
        default: {
          throw new Error("Unhandled action type: ".concat(action.type));
        }
      }
    }
    var TabsContext = _react.default.createContext(null);
    TabsContext.displayName = "MaterialTailwind.TabsContext";
    function useTabs() {
      var context = _react.default.useContext(TabsContext);
      if (!context) {
        throw new Error("useTabs() must be used within a Tabs. It happens when you use TabsHeader, TabsBody, Tab or TabPanel outside the Tabs component.");
      }
      return context;
    }
    var TabsContextProvider = function(param) {
      var id = param.id, value = param.value, orientation = param.orientation, children = param.children;
      var initialState = _react.default.useMemo(function() {
        return { id: id !== null && id !== void 0 ? id : "indicator", active: value, orientation, isInitial: true, appliedAnimation: { initial: {}, unmount: {}, mount: {} }, indicatorProps: void 0 };
      }, [id, value, orientation]);
      var _React_useReducer = _slicedToArray(_react.default.useReducer(reducer, initialState), 2), state = _React_useReducer[0], dispatch = _React_useReducer[1];
      var contextValue = _react.default.useMemo(function() {
        return { state, dispatch };
      }, [state]);
      return _react.default.createElement(TabsContext.Provider, { value: contextValue }, children);
    };
    var setId = function(dispatch, value) {
      return dispatch({ type: "SET_ID", value });
    };
    var setActive = function(dispatch, value) {
      return dispatch({ type: "SET_ACTIVE", value });
    };
    var setAnimation = function(dispatch, value) {
      return dispatch({ type: "SET_ANIMATION", value });
    };
    var setIndicator = function(dispatch, value) {
      return dispatch({ type: "SET_INDICATOR", value });
    };
    var setIsInitial = function(dispatch, value) {
      return dispatch({ type: "SET_IS_INITIAL", value });
    };
    var setOrientation = function(dispatch, value) {
      return dispatch({ type: "SET_ORIENTATION", value });
    };
    TabsContextProvider.propTypes = { id: _tabs.propTypesId, value: _tabs.propTypesValue, orientation: _tabs.propTypesOrientation, children: _tabs.propTypesChildren };
    TabsContextProvider.displayName = "MaterialTailwind.TabsContextProvider";
  }
});

export {
  require_generic,
  require_tabs,
  require_TabsContext
};
//# sourceMappingURL=chunk-QYKMHKBA.js.map
