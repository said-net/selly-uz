{
  "version": 3,
  "sources": ["../../use-scan-detection/src/index.ts", "dep:use-scan-detection"],
  "sourcesContent": ["import {\r\n    useCallback,\r\n    useEffect,\r\n    useRef\r\n} from \"react\";\r\n\r\ninterface bufferCharacter {\r\n    time: number,\r\n    char: String\r\n}\r\n\r\ninterface buffer {\r\n    current: Array<bufferCharacter>\r\n}\r\n\r\ninterface config {\r\n    /** Time to wait from last character to then trigger an evaluation of the buffer. */\r\n    timeToEvaluate?: number,\r\n    /** Average time between characters in milliseconds. Used to determine if input is from keyboard or a scanner. Defaults to 50ms.*/\r\n    averageWaitTime?: number,\r\n    /** Character that barcode scanner prefixes input with.*/\r\n    startCharacter?: Array<number>,\r\n    /** Character that barcode scanner suffixes input with. Defaults to line return.*/\r\n    endCharacter?: Array<number>,\r\n    /** Callback to use on complete scan input.*/\r\n    onComplete: (code: String) => void,\r\n    /** Callback to use on error. */\r\n    onError?: (error: String) => void,\r\n    /** Minimum length a scanned code should be. Defaults to 0.*/\r\n    minLength?: number,\r\n    /** Ignore scan input if this node is focused.*/\r\n    ignoreIfFocusOn?: Node,\r\n    /** Stop propagation on keydown event. Defaults to false.*/\r\n    stopPropagation?: Boolean,\r\n    /** Prevent default on keydown event. Defaults to false.*/\r\n    preventDefault?: Boolean,\r\n    /** Bind keydown event to this node. Defaults to document.*/\r\n    container?: Node\r\n}\r\n\r\n/**\r\n * Checks for scan input within a container and sends the output to a callback function.\r\n * @param param0 Config object\r\n */\r\nconst useScanDetection = ({\r\n    timeToEvaluate = 100,\r\n    averageWaitTime = 50,\r\n    startCharacter = [],\r\n    endCharacter = [13, 27],\r\n    onComplete,\r\n    onError,\r\n    minLength = 1,\r\n    ignoreIfFocusOn,\r\n    stopPropagation = false,\r\n    preventDefault = false,\r\n    container = document\r\n}: config) => {\r\n\r\n    const buffer: buffer = useRef([])\r\n    const timeout: any = useRef(false)\r\n\r\n    const clearBuffer = () => {\r\n        buffer.current = []\r\n    }\r\n    const evaluateBuffer = () => {\r\n        clearTimeout(timeout.current)\r\n        const sum = buffer.current\r\n            .map(({ time }, k, arr) => k > 0 ? time - arr[k - 1].time : 0)\r\n            .slice(1)\r\n            .reduce((total, delta) => total + delta, 0)\r\n        const avg = sum / (buffer.current.length - 1)\r\n\r\n        const code = buffer.current\r\n            .slice(startCharacter.length > 0 ? 1 : 0)\r\n            .map(({ char }) => char)\r\n            .join(\"\")\r\n\r\n        if (\r\n            avg <= averageWaitTime\r\n            && buffer.current.slice(startCharacter.length > 0 ? 1 : 0).length >= minLength\r\n        ) {\r\n            onComplete(code)\r\n        } else {\r\n            avg <= averageWaitTime && !!onError && onError(code)\r\n        }\r\n        clearBuffer()\r\n    }\r\n\r\n    const onKeyDown: Function = useCallback((event: KeyboardEvent) => {\r\n        if (event.currentTarget !== ignoreIfFocusOn) {\r\n            if (endCharacter.includes(event.keyCode)) {\r\n                evaluateBuffer()\r\n            }\r\n            if (buffer.current.length > 0 || startCharacter.includes(event.keyCode) || startCharacter.length === 0) {\r\n                clearTimeout(timeout.current)\r\n                timeout.current = setTimeout(evaluateBuffer, timeToEvaluate)\r\n                buffer.current.push({ time: performance.now(), char: event.key })\r\n            }\r\n        }\r\n        if (stopPropagation) {\r\n            event.stopPropagation()\r\n        }\r\n        if (preventDefault) {\r\n            event.preventDefault()\r\n        }\r\n    }, [\r\n            startCharacter,\r\n            endCharacter,\r\n            timeToEvaluate,\r\n            onComplete,\r\n            onError,\r\n            minLength,\r\n            ignoreIfFocusOn,\r\n            stopPropagation,\r\n            preventDefault\r\n        ])\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            clearTimeout(timeout.current)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        container.addEventListener(\"keydown\", (onKeyDown) as EventListener)\r\n        return () => {\r\n            container.removeEventListener(\"keydown\", (onKeyDown) as EventListener)\r\n        }\r\n    }, [onKeyDown])\r\n}\r\n\r\nexport default useScanDetection", "export default require(\"./node_modules/use-scan-detection/dist/index.js\");"],
  "mappings": ";;;;;;;;;;;;AAAA,QAAA,UAAA;AA4CA,QAAM,mBAAmB,SAAC,IAYjB;UAXL,KAAA,GAAA,gBAAA,iBAAA,OAAA,SAAA,MAAA,IACA,KAAA,GAAA,iBAAA,kBAAA,OAAA,SAAA,KAAA,IACA,KAAA,GAAA,gBAAA,iBAAA,OAAA,SAAA,CAAA,IAAA,IACA,KAAA,GAAA,cAAA,eAAA,OAAA,SAAA,CAAA,IAAA,EAAA,IAAA,IACA,aAAA,GAAA,YACA,UAAA,GAAA,SACA,KAAA,GAAA,WAAA,YAAA,OAAA,SAAA,IAAA,IACA,kBAAA,GAAA,iBACA,KAAA,GAAA,iBAAA,kBAAA,OAAA,SAAA,QAAA,IACA,KAAA,GAAA,gBAAA,iBAAA,OAAA,SAAA,QAAA,IACA,KAAA,GAAA,WAAA,YAAA,OAAA,SAAA,WAAA;AAGA,UAAM,SAAiB,QAAA,OAAO,CAAA,CAAE;AAChC,UAAM,UAAe,QAAA,OAAO,KAAK;AAEjC,UAAM,cAAc,WAAA;AAChB,eAAO,UAAU,CAAA;MACrB;AACA,UAAM,iBAAiB,WAAA;AACnB,qBAAa,QAAQ,OAAO;AAC5B,YAAM,MAAM,OAAO,QACd,IAAI,SAACA,KAAU,GAAG,KAAG;cAAd,OAAAA,IAAA;AAAmB,iBAAA,IAAI,IAAI,OAAO,IAAI,IAAI,GAAG,OAAO;QAAjC,CAAkC,EAC5D,MAAM,CAAC,EACP,OAAO,SAAC,OAAO,OAAK;AAAK,iBAAA,QAAQ;QAAR,GAAe,CAAC;AAC9C,YAAM,MAAM,OAAO,OAAO,QAAQ,SAAS;AAE3C,YAAM,OAAO,OAAO,QACf,MAAM,eAAe,SAAS,IAAI,IAAI,CAAC,EACvC,IAAI,SAACA,KAAQ;cAAN,OAAAA,IAAA;AAAW,iBAAA;QAAA,CAAI,EACtB,KAAK,EAAE;AAEZ,YACI,OAAO,mBACJ,OAAO,QAAQ,MAAM,eAAe,SAAS,IAAI,IAAI,CAAC,EAAE,UAAU,WACvE;AACE,qBAAW,IAAI;eACZ;AACH,iBAAO,mBAAmB,CAAC,CAAC,WAAW,QAAQ,IAAI;;AAEvD,oBAAW;MACf;AAEA,UAAM,YAAsB,QAAA,YAAY,SAAC,OAAoB;AACzD,YAAI,MAAM,kBAAkB,iBAAiB;AACzC,cAAI,aAAa,SAAS,MAAM,OAAO,GAAG;AACtC,2BAAc;;AAElB,cAAI,OAAO,QAAQ,SAAS,KAAK,eAAe,SAAS,MAAM,OAAO,KAAK,eAAe,WAAW,GAAG;AACpG,yBAAa,QAAQ,OAAO;AAC5B,oBAAQ,UAAU,WAAW,gBAAgB,cAAc;AAC3D,mBAAO,QAAQ,KAAK,EAAE,MAAM,YAAY,IAAG,GAAI,MAAM,MAAM,IAAG,CAAE;;;AAGxE,YAAI,iBAAiB;AACjB,gBAAM,gBAAe;;AAEzB,YAAI,gBAAgB;AAChB,gBAAM,eAAc;;MAE5B,GAAG;QACK;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;OACH;AAEL,cAAA,UAAU,WAAA;AACN,eAAO,WAAA;AACH,uBAAa,QAAQ,OAAO;QAChC;MACJ,GAAG,CAAA,CAAE;AAEL,cAAA,UAAU,WAAA;AACN,kBAAU,iBAAiB,WAAY,SAA2B;AAClE,eAAO,WAAA;AACH,oBAAU,oBAAoB,WAAY,SAA2B;QACzE;MACJ,GAAG,CAAC,SAAS,CAAC;IAClB;AAEA,YAAA,UAAe;;;;;ACnIf,IAAO,6BAAQ;",
  "names": ["_a"]
}
